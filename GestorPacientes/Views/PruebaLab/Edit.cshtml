@using GestorPacientes.Core.Application.ViewModels.PruebaLab
@model PruebaLabUpdateViewModel


@{
    ViewData["Title"] = "Edición de Prueba de Laboratorio";
}

<div class="d-flex justify-content-between bottom-line">
    <div>
        <h1 class="d-inline">@ViewData["Title"]</h1>
    </div>
    <div>
        <h5 class="fw-lighter m-3">Editando: @Html.DisplayFor(model => model.NombrePruebaLab)</h5>
    </div>
</div>
<hr />

<div class="row">
    <div class="col-4">
    </div>
    <div class="col-md-4">
        <div class="card">
            <form asp-action="Edit">
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="invisible">
                        <label asp-for="PruebaLabId" class="control-label">ID</label>
                        <input asp-for="PruebaLabId" class="form-control" readonly />
                        <span asp-validation-for="PruebaLabId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="NombrePruebaLab" class="control-label">Nombre</label>
                        <input asp-for="NombrePruebaLab" class="form-control" />
                        <span asp-validation-for="NombrePruebaLab" class="text-danger"></span>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="form-group mt-2 text-center">
                        <input type="submit" value="Guardar" class="btn btn-success col-6 mx-auto" />
                        <a asp-action="Index" class="btn btn-primary col-5 mx-auto">Regresar</a>
                    </div>
                </div>

                <style>
                .invisible {
                    display: none;
                }
                </style>
            </form>
        </div>
    </div>
</div>